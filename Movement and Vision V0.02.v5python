{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\nleft_motor = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nright_motor = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\nclaw_motor = Motor(Ports.PORT4, GearSetting.RATIO_36_1, True)\nele_motor = Motor(Ports.PORT6, GearSetting.RATIO_18_1, True)\nele_motor2 = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\n\n# vex-vision-config:begin\nvision_5__BLUEBOX = Signature(1, -3981, -3239, -3610, 951, 5863, 3407, 2.5, 0)\nvision_5__REDBOX = Signature(2, 5221, 8251, 6736, -1417, -843, -1130, 2.5, 0)\nvision_5__GREENBOX = Signature(3, -617, 1, -308, -4605, -2437, -3521, 2.5, 0)\nvision_5 = Vision(Ports.PORT5, 50, vision_5__BLUEBOX, vision_5__REDBOX, vision_5__GREENBOX)\n# vex-vision-config:end\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n# Set random seed\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n\ninitializeRandomSeed()\n\n# Clear console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n# Begin object detection code\ncheck_red = Event()\ncheck_blue = Event()\ncheck_green = Event()\n\ndef has_blue_callback():\n    brain.screen.clear_row(1)\n    brain.screen.set_cursor(1, 1)\n    vexcode_vision_5_objects = vision_5.take_snapshot(vision_5__BLUEBOX)\n    if vexcode_vision_5_objects and len(vexcode_vision_5_objects) > 0:\n        brain.screen.print(\"Blue Object Found\")\n    else:\n        brain.screen.print(\"No Blue Object\")\n\ndef has_red_callback():\n    brain.screen.clear_row(3)\n    brain.screen.set_cursor(3, 1)\n    vexcode_vision_5_objects = vision_5.take_snapshot(vision_5__REDBOX)\n    if vexcode_vision_5_objects and len(vexcode_vision_5_objects) > 0:\n        brain.screen.print(\"Red Object Found\")\n    else:\n        brain.screen.print(\"No Red Object\")\n\ndef has_green_callback():\n    brain.screen.clear_row(5)\n    brain.screen.set_cursor(5, 1)\n    vexcode_vision_5_objects = vision_5.take_snapshot(vision_5__GREENBOX)\n    if vexcode_vision_5_objects and len(vexcode_vision_5_objects) > 0:\n        brain.screen.print(\"Green Object Found\")\n    else:\n        brain.screen.print(\"No Green Object\")\n\n# Register event handlers\ncheck_blue(has_blue_callback)\ncheck_red(has_red_callback)\ncheck_green(has_green_callback)\n\n# Robot control code for motors\ndef controller_L1_Pressed():\n    ele_motor.spin(FORWARD)\n    ele_motor2.spin(FORWARD)\n    while controller_1.buttonL1.pressing():\n        wait(5, MSEC)\n    ele_motor.stop()\n    ele_motor2.stop()\n\ndef controller_L2_Pressed():\n    ele_motor.spin(REVERSE)\n    ele_motor2.spin(REVERSE)\n    while controller_1.buttonL2.pressing():\n        wait(5, MSEC)\n    ele_motor.stop()\n    ele_motor2.stop()\n\ndef controller_R1_Pressed():\n    claw_motor.spin(FORWARD)\n    while controller_1.buttonR1.pressing():\n        wait(5, MSEC)\n    claw_motor.stop()\n\ndef controller_R2_Pressed():\n    claw_motor.spin(REVERSE)\n    while controller_1.buttonR2.pressing():\n        wait(5, MSEC)\n    claw_motor.stop()\n\n# Left joystick controls both forward/backward movement (Axis3) and turning (Axis4)\nwhile True:\n    # Calculate the power for each motor\n    forward_speed = controller_1.axis3.position()  # Forward/backward movement\n    turn_speed = controller_1.axis4.position()     # Left/right turning\n    \n    # Apply speeds to left and right motors\n    left_motor.set_velocity(forward_speed + turn_speed, PERCENT)\n    right_motor.set_velocity(forward_speed - turn_speed, PERCENT)\n    \n    left_motor.spin(FORWARD)\n    right_motor.spin(FORWARD)\n    \n    # Check vision sensor for objects\n    check_blue.broadcast_and_wait()\n    check_red.broadcast_and_wait()\n    check_green.broadcast_and_wait()\n    \n    wait(0.1, SECONDS)\n","textLanguage":"python","robotConfig":[{"port":[5],"name":"vision_5","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":53,\"signatures\":[{\"name\":\"BLUEBOX\",\"parameters\":{\"uMin\":-3679,\"uMax\":-2775,\"uMean\":-3227,\"vMin\":4581,\"vMax\":7021,\"vMean\":5801,\"rgb\":4613270,\"type\":0,\"name\":\"BLUEBOX\"},\"range\":2.5},{\"name\":\"REDBOX\",\"parameters\":{\"uMin\":7527,\"uMax\":11137,\"uMean\":9332,\"vMin\":-1611,\"vMax\":-1045,\"vMean\":-1328,\"rgb\":9981508,\"type\":0,\"name\":\"REDBOX\"},\"range\":2.5},{\"name\":\"GREENBOX\",\"parameters\":{\"uMin\":-1435,\"uMax\":1,\"uMean\":-717,\"vMin\":-6129,\"vMax\":-3641,\"vMean\":-4885,\"rgb\":12832132,\"type\":0,\"name\":\"GREENBOX\"},\"range\":1.4},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":3,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.3","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}