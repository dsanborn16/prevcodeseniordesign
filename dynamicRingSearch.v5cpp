{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n// AI Classification Competition Element IDs\nenum gameElements {\n  mobileGoal,\n  redRing,\n  blueRing,\n};\n\n// AI Vision Color Descriptions\n// AI Vision Code Descriptions\nvex::aivision AIVision12(PORT12, aivision::ALL_TAGS, aivision::ALL_AIOBJS);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nmotor leftDriveMotor = motor(PORT2, gearSetting::ratio18_1,false);\nmotor rightDriveMotor = motor(PORT1, gearSetting::ratio18_1,true);\nmotor intakeMotor = motor(PORT8, gearSetting::ratio18_1,false);\nmotor conveyorMotor = motor(PORT3, gearSetting::ratio18_1,false);\nmotor leftLiftMotor = motor(PORT20, gearSetting::ratio18_1,false);\nmotor rightLiftMotor = motor(PORT19, gearSetting::ratio18_1,false);\n\nint Brain_precision = 0, Console_precision = 0, AIVision1_objectIndex = 0;\n\nfloat myVariable;\n\nint main() {\n  vexcodeInit();\n  while (true) {\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    \n    // Take a snapshot of all blue rings (identified by object class 2 when set to competition elements)\n    AIVision12.takeSnapshot(aivision::ALL_AIOBJS);\n    wait(500, msec);\n\n    // Check if any blue object is detected\n    if (AIVision12.objectCount > 0) {\n      for(int i=0;i<AIVision12.objectCount;i++){\n        if(AIVision12.objects[i].id==blueRing){\n          Brain.Screen.print(\"Blue Ring Found. Centering on blue ring.\");\n          //turn robot until centered on the ring\n          if(AIVision12.objects[i].centerX < 160 - 20) {\n            rightDriveMotor.setVelocity(20, rpm);\n            leftDriveMotor.setVelocity(20, rpm);\n            rightDriveMotor.spin(forward);\n            leftDriveMotor.spin(reverse);\n            if(120 <= AIVision12.objects[i].centerX && AIVision12.objects[i].centerX <= 180){\n              rightDriveMotor.stop();\n              leftDriveMotor.stop();\n            }\n          }\n          else if(AIVision12.objects[i].centerX > 160 + 20){\n            rightDriveMotor.setVelocity(20, rpm);\n            leftDriveMotor.setVelocity(20, rpm);\n            rightDriveMotor.spin(reverse);\n            leftDriveMotor.spin(forward);\n            if(120 <= AIVision12.objects[i].centerX && AIVision12.objects[i].centerX <= 180){\n              rightDriveMotor.stop();\n              leftDriveMotor.stop();\n            }\n          }\n          //once centered, drive to the ring and intake it\n          else {\n            //stop turning now that centered\n            Brain.Screen.print(\"Centered on blue ring. Moving to intake.\");\n            //now the y needs to reduce to zero??\n            rightDriveMotor.setVelocity(100, rpm);\n            leftDriveMotor.setVelocity(100, rpm);\n            //turn on the intake\n            intakeMotor.spin(forward);\n            //drive towards the ring\n            rightDriveMotor.spin(forward);\n            leftDriveMotor.spin(forward);\n            wait(500, msec);\n            rightDriveMotor.stop();\n            leftDriveMotor.stop();\n            //run the conveyor\n            conveyorMotor.spin(forward);\n            wait(500, msec);\n          }\n        }\n        else if(AIVision12.objects[i].id==redRing){\n          wait(50, msec);\n        }\n      }\n    }\n    //when no blue rings are detected\n    else {\n      rightDriveMotor.setVelocity(50, rpm);\n      leftDriveMotor.setVelocity(50, rpm);\n      Brain.Screen.print(\"No blue rings found. Moving to find blue ring.\");\n      //turn left for 1 second\n      rightDriveMotor.spin(reverse);\n      leftDriveMotor.spin(forward);\n      wait(1000, msec);\n      //stop turning\n      rightDriveMotor.stop();\n      leftDriveMotor.stop();\n      wait(500, msec);\n    }\n  }\n}","textLanguage":"cpp","robotConfig":[{"port":[12],"name":"AIVision12","customName":false,"deviceType":"AIVision","deviceClass":"aivision","setting":{"config":"{\"colors\":[],\"codes\":[],\"tags\":true,\"AIObjects\":true,\"AIObjectModel\":[\"Ball(Blue)\",\"Ball(Green)\",\"Ball(Red)\",\"Ring(Blue)\",\"Ring(Green)\",\"Ring(Red)\",\"Cube(Blue)\",\"Cube(Green)\",\"Cube(Red)\"],\"aiModelDropDownValue\":\"2024-2025 High Stakes\"}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}