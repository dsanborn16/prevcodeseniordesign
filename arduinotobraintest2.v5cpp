{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Motor14 = motor(PORT14, ratio18_1, false);\n\ncontroller Controller1 = controller(primary);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// Include the V5 Library\n#include \"vex.h\"\n#include \"v5_apiuser.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n#define BAUDRATE 1040\n//uint8_t valu = 128;\n\nmotor Arduino = motor(PORT14, ratio18_1, false);\nchar x = 0;\nchar y = 0;\n\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n  vexGenericSerialEnable(Arduino.index(),0);\n  vexGenericSerialBaudrate(Arduino.index(), BAUDRATE );\n  Brain.Screen.print(\"VEXcode\");\n  Brain.Screen.newLine();\n\n\n  while (1) {\n    if(vexGenericSerialReceiveAvail(Arduino.index()) >0){\n      Brain.Screen.print(\"signal\");\n      x = vexGenericSerialReadChar(Arduino.index());\n      if(x == 64){\n        Controller1.rumble(\"----\");\n        y = 40;\n      }\n      if (x == 48) {\n        y = 0;\n      }\n      if (x == 49) {\n        y = 1;\n      }\n      if (x == 50) {\n        y = 2;\n      }\n      if (x == 51) {\n        y = 3;\n      }\n      if (x == 52) {\n        y = 4;\n      }      \n      if (x == 53) {\n        y = 5;\n      }\n      if (x == 54) {\n        y = 6;\n      } \n      if (x == 55) {\n        y = 7;\n      }\n      if (x == 56) {\n        y = 8;\n      }  \n      if (x == 57) {\n        y = 9;\n      }\n      if (x == 46) {\n        y = 0;\n      }\n      if (x==63){\n        y = 70;\n      }\n      if (y == 46) {\n        Brain.Screen.print(\".\");\n      }\n      else if (y == 70) {\n      Brain.Screen.newLine();        \n      }\n      else if (y==40){\n        Brain.Screen.print(\"\");\n      }\n      else \n        Brain.Screen.print(y);\n      }\n    }\n  }\n\n","textLanguage":"cpp","robotConfig":[{"port":[14],"name":"Motor14","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}}],"slot":6,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}