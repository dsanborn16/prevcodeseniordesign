{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Brain should be defined by default\nbrain=Brain()\n\nbrain.screen.print(\"Controller Code\")\n\n\n# Robot configuration code\nclaw_motor = Motor(Ports.PORT9, GearSetting.RATIO_18_1, False)\narm_motor = Motor(Ports.PORT11, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\nleft_motor = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nright_motor = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\n\nspool_motor = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nwheel_motor = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\n\n\n\n# Begin project code\n# Create callback functions for each controller button event\n\ndef controller_A_Pressed():\n    spool_motor.spin(FORWARD)\n    while controller_1.buttonA.pressing():\n        wait(5, MSEC)\n    spool_motor.stop()\n\ndef controller_B_Pressed():\n    wheel_motor.spin(FORWARD)\n    while controller_1.buttonB.pressing():\n        wait(5, MSEC)\n    wheel_motor.stop()\n\n\n# Take In\ndef controller_L1_Pressed():\n    arm_motor.spin(FORWARD)\n    claw_motor.spin(REVERSE)\n    while controller_1.buttonL1.pressing():\n        wait(5, MSEC)\n    arm_motor.stop()\n    claw_motor.stop()\n\n# Push out\n\ndef controller_L2_Pressed():\n    arm_motor.spin(REVERSE)\n    claw_motor.spin(FORWARD)\n    while controller_1.buttonL2.pressing():\n        wait(5, MSEC)\n    arm_motor.stop()\n    claw_motor.stop()\n\n# R1\ndef controller_R1_Pressed():\n    left_motor.spin(REVERSE)\n    right_motor.spin(REVERSE)\n    while controller_1.buttonR1.pressing():\n        wait(5, MSEC)\n    claw_motor.stop()\n\n# R2\ndef controller_R2_Pressed():\n    left_motor.spin(FORWARD)\n    right_motor.spin(FORWARD)\n    while controller_1.buttonR2.pressing():\n        wait(5, MSEC)\n    claw_motor.stop()\n\n# Create Controller callback events - 15 msec delay to ensure events get registered\ncontroller_1.buttonL1.pressed(controller_L1_Pressed)\ncontroller_1.buttonL2.pressed(controller_L2_Pressed)\ncontroller_1.buttonR1.pressed(controller_L2_Pressed)\ncontroller_1.buttonR2.pressed(controller_R2_Pressed)\nwait(15, MSEC)\n\n# Configure Arm and Claw motor hold settings and velocity\narm_motor.set_stopping(HOLD)\nclaw_motor.set_stopping(HOLD)\narm_motor.set_velocity(60, PERCENT)\nclaw_motor.set_velocity(60, PERCENT)\n\n# Main Controller loop to set motors to controller axis postiions\nwhile True:\n    left_motor.set_velocity(controller_1.axis3.position(), PERCENT)\n    left_motor.spin(FORWARD)\n    wait(5, MSEC)\n    right_motor.set_velocity(controller_1.axis2.position(), PERCENT)\n    right_motor.spin(FORWARD)\n    wait(5, MSEC)","textLanguage":"python","robotConfig":[{"port":[2,10,null],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.3","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}