{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       motorConstantDataCollector.cpp                            */\n/*    Author:       Nick Tessitore                                            */\n/*    Created:      3/25/2025                                                 */\n/*    Description:  Collect data to solve for R, Kt, and Ke                   */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n#include <iostream>\n#include <iomanip>\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n//declare the motor (currently set to conveyor)\nmotor conveyorMotor = motor(PORT3, gearSetting::ratio6_1,false);\nmotor intakeMotor = motor(PORT8, gearSetting::ratio18_1,false);\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // Begin project code\n\n  //initalize motor to spin at given velocity\n  conveyorMotor.setVelocity(80, percent);\n  intakeMotor.setVelocity(90, percent);\n  conveyorMotor.spin(forward);\n  intakeMotor.spin(forward);\n\n  //loop until user presses stop on the brain\n  while(true){\n\n    //record times for J calculation\n    int timeMS = Brain.Timer.time(msec);\n\n    //declare variables for storing all available motor data\n    float power = conveyorMotor.power(watt);\n    float current = conveyorMotor.current(amp);\n    float velocity = conveyorMotor.velocity(rpm);\n    float torque = conveyorMotor.torque(Nm);\n\n    //export csv formatted data to the print terminal\n    std::cout << std::fixed << std::setprecision(3)\n    << power << \",\"\n    << current << \",\"\n    << velocity << \",\"\n    << torque << \",\"\n    << timeMS <<std::endl;\n\n    //wait 0.1 seconds to record again\n    wait(100, msec);\n  }\n}\n","textLanguage":"cpp","robotConfig":[],"slot":6,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}